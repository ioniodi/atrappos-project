variables:
  DEPLOY_HOST: '<YOUR_HOST_ADDRESS>'

stages:
  - build
  - deploy-mk-img
  - deploy-run-img

create-set-docker-image:
  image: <your_docker_server>/docker:latest
  stage: deploy-mk-img
  only:
    - dev
    - uat
    - master
  before_script:
    - apk --no-cache add --update bash openssh openssh-client &&
      which ssh-agent || ( apk --update add openssh-client ) &&
      eval $(ssh-agent -s) &&
      mkdir -p ~/.ssh &&
      echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
    # Add on server the user id_rsa.pub to authorized_keys on server again
    - ssh-keyscan "$DEPLOY_HOST" >> ~/.ssh/known_hosts &&
      chmod 700 ~/.ssh && chmod 644 ~/.ssh/known_hosts
    - >
      docker build
      --build-arg SERVER_URL='<ATRAPPOS_SERVER_URL>'
      --build-arg THUNDERFOREST_API_KEY="<YOUR_THUNDERFOREST_API_KEY>"
      --build-arg STADIA_API_KEY="<YOUR_STADIA_API_KEY>"
      --build-arg MOBILE_APP_URL="<ATRAPPOS_MOBILE_URL>"
      --build-arg GA_ID="<YOUR_GOOGLE_ANALYTICS_ID"
      --build-arg NODE_ENV="production"
      -t <DIRECTORY>/atrappos-web .
    - docker save <DIRECTORY>/atrappos-web > /tmp/atrappos-web.tar &&
      docker rmi <DIRECTORY>/atrappos-web
  script:
    - scp -r /tmp/atrappos-web.tar cirobot@$DEPLOY_HOST:/tmp/atrappos-web.tar
    - ssh cirobot@$DEPLOY_HOST 'docker load < /tmp/atrappos-web.tar && rm /tmp/atrappos-web.tar'

deploy-image:
  image: <your_docker_server>/docker:latest
  stage: deploy-run-img
  only:
    - dev
    - uat
    - master
  dependencies:
    - create-set-docker-image
  variables:
    DOCKER_HOST: $DEPLOY_HOST:4243
  script:
    - docker stop atrappos-web || echo 'Container atrappos-web not found, not stoped'
    - docker rm atrappos-web || echo 'Container atrappos-web not running'
    - >
      docker run -d -p 5002:5000
      --restart unless-stopped
      -m 350M --memory-swap=-1
      --name atrappos-web <DIRECTORY>/atrappos-web